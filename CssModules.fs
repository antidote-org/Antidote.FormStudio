//------------------------------------------------------------------------------
//        This code was generated by fable-css-modules.
//        Changes to this file will be lost when the code is regenerated.
//------------------------------------------------------------------------------

[<RequireQualifiedAccess>]
module internal CssModules

open Fable.Core

type DynamicFormDesigner =

    /// <summary>
    /// Binding for <c>toolbar-component</c> class
    /// </summary>
    [<Emit("$0[\"toolbar-component\"]")>]
    abstract toolbarComponent : string

    /// <summary>
    /// Binding for <c>step-delete</c> class
    /// </summary>
    [<Emit("$0[\"step-delete\"]")>]
    abstract stepDelete : string

    /// <summary>
    /// Binding for <c>step</c> class
    /// </summary>
    [<Emit("$0[\"step\"]")>]
    abstract step : string

    /// <summary>
    /// Binding for <c>field</c> class
    /// </summary>
    [<Emit("$0[\"field\"]")>]
    abstract field : string

    /// <summary>
    /// Binding for <c>field-dragging-hint</c> class
    /// </summary>
    [<Emit("$0[\"field-dragging-hint\"]")>]
    abstract fieldDraggingHint : string

    /// <summary>
    /// Binding for <c>field-is-being-dragged-over</c> class
    /// </summary>
    [<Emit("$0[\"field-is-being-dragged-over\"]")>]
    abstract fieldIsBeingDraggedOver : string

    /// <summary>
    /// Binding for <c>field-before-and-after</c> class
    /// </summary>
    [<Emit("$0[\"field-before-and-after\"]")>]
    abstract fieldBeforeAndAfter : string

    /// <summary>
    /// Binding for <c>field-selected</c> class
    /// </summary>
    [<Emit("$0[\"field-selected\"]")>]
    abstract fieldSelected : string

    /// <summary>
    /// Binding for <c>field-drag</c> class
    /// </summary>
    [<Emit("$0[\"field-drag\"]")>]
    abstract fieldDrag : string

    /// <summary>
    /// Binding for <c>field-dragged-over</c> class
    /// </summary>
    [<Emit("$0[\"field-dragged-over\"]")>]
    abstract fieldDraggedOver : string

    /// <summary>
    /// Binding for <c>field-toolbar-actions</c> class
    /// </summary>
    [<Emit("$0[\"field-toolbar-actions\"]")>]
    abstract fieldToolbarActions : string

    /// <summary>
    /// Binding for <c>parent-container-class</c> class
    /// </summary>
    [<Emit("$0[\"parent-container-class\"]")>]
    abstract parentContainerClass : string

    /// <summary>
    /// Binding for <c>drop-fields-container</c> class
    /// </summary>
    [<Emit("$0[\"drop-fields-container\"]")>]
    abstract dropFieldsContainer : string

    /// <summary>
    /// Binding for <c>input-as-label</c> class
    /// </summary>
    [<Emit("$0[\"input-as-label\"]")>]
    abstract inputAsLabel : string

    /// <summary>
    /// Binding for <c>input-step</c> class
    /// </summary>
    [<Emit("$0[\"input-step\"]")>]
    abstract inputStep : string

    /// <summary>
    /// Binding for <c>step-break</c> class
    /// </summary>
    [<Emit("$0[\"step-break\"]")>]
    abstract stepBreak : string

    /// <summary>
    /// Binding for <c>button-minimal</c> class
    /// </summary>
    [<Emit("$0[\"button-minimal\"]")>]
    abstract buttonMinimal : string

    /// <summary>
    /// Binding for <c>toolbar-component-left</c> class
    /// </summary>
    [<Emit("$0[\"toolbar-component-left\"]")>]
    abstract toolbarComponentLeft : string

    /// <summary>
    /// Binding for <c>toolbar-component-left-hidden</c> class
    /// </summary>
    [<Emit("$0[\"toolbar-component-left-hidden\"]")>]
    abstract toolbarComponentLeftHidden : string

    /// <summary>
    /// Binding for <c>toolbar-component-right</c> class
    /// </summary>
    [<Emit("$0[\"toolbar-component-right\"]")>]
    abstract toolbarComponentRight : string

    /// <summary>
    /// Binding for <c>toolbar-component-right-hidden</c> class
    /// </summary>
    [<Emit("$0[\"toolbar-component-right-hidden\"]")>]
    abstract toolbarComponentRightHidden : string

    /// <summary>
    /// Binding for <c>toolbar-panel</c> class
    /// </summary>
    [<Emit("$0[\"toolbar-panel\"]")>]
    abstract toolbarPanel : string

    /// <summary>
    /// Binding for <c>toolbar-item</c> class
    /// </summary>
    [<Emit("$0[\"toolbar-item\"]")>]
    abstract toolbarItem : string

    /// <summary>
    /// Binding for <c>disabled</c> class
    /// </summary>
    [<Emit("$0[\"disabled\"]")>]
    abstract disabled : string

    /// <summary>
    /// Binding for <c>switch</c> class
    /// </summary>
    [<Emit("$0[\"switch\"]")>]
    abstract switch : string

    /// <summary>
    /// Binding for <c>slider</c> class
    /// </summary>
    [<Emit("$0[\"slider\"]")>]
    abstract slider : string

    /// <summary>
    /// Binding for <c>round</c> class
    /// </summary>
    [<Emit("$0[\"round\"]")>]
    abstract round : string

module ComponentFields =

    type FormMessage =

        /// <summary>
        /// Binding for <c>align</c> class
        /// </summary>
        [<Emit("$0[\"align\"]")>]
        abstract align : string

        /// <summary>
        /// Binding for <c>center-width</c> class
        /// </summary>
        [<Emit("$0[\"center-width\"]")>]
        abstract centerWidth : string

        /// <summary>
        /// Binding for <c>text-container</c> class
        /// </summary>
        [<Emit("$0[\"text-container\"]")>]
        abstract textContainer : string

    type SignatureCanvas =

        /// <summary>
        /// Binding for <c>signature-canvas</c> class
        /// </summary>
        [<Emit("$0[\"signature-canvas\"]")>]
        abstract signatureCanvas : string

        /// <summary>
        /// Binding for <c>signature-field</c> class
        /// </summary>
        [<Emit("$0[\"signature-field\"]")>]
        abstract signatureField : string

    type SpeechToText =

        /// <summary>
        /// Binding for <c>transparent-button</c> class
        /// </summary>
        [<Emit("$0[\"transparent-button\"]")>]
        abstract transparentButton : string

        /// <summary>
        /// Binding for <c>button</c> class
        /// </summary>
        [<Emit("$0[\"button\"]")>]
        abstract button : string

        /// <summary>
        /// Binding for <c>not-rec</c> class
        /// </summary>
        [<Emit("$0[\"not-rec\"]")>]
        abstract notRec : string

        /// <summary>
        /// Binding for <c>recording</c> class
        /// </summary>
        [<Emit("$0[\"recording\"]")>]
        abstract recording : string

        /// <summary>
        /// Binding for <c>spinner</c> class
        /// </summary>
        [<Emit("$0[\"spinner\"]")>]
        abstract spinner : string

module Compose =

    type DynamicFormAsComponent =

        /// <summary>
        /// Binding for <c>controls</c> class
        /// </summary>
        [<Emit("$0[\"controls\"]")>]
        abstract controls : string

    type Editor =

        /// <summary>
        /// Binding for <c>page-container</c> class
        /// </summary>
        [<Emit("$0[\"page-container\"]")>]
        abstract pageContainer : string

        /// <summary>
        /// Binding for <c>form-container</c> class
        /// </summary>
        [<Emit("$0[\"form-container\"]")>]
        abstract formContainer : string

    type FormCompose =

        /// <summary>
        /// Binding for <c>form-container</c> class
        /// </summary>
        [<Emit("$0[\"form-container\"]")>]
        abstract formContainer : string

    type FormComposeProgressWizard =

        /// <summary>
        /// Binding for <c>step-marker</c> class
        /// </summary>
        [<Emit("$0[\"step-marker\"]")>]
        abstract stepMarker : string

module UI =

    type CAGE =

        /// <summary>
        /// Binding for <c>points-score</c> class
        /// </summary>
        [<Emit("$0[\"points-score\"]")>]
        abstract pointsScore : string

        /// <summary>
        /// Binding for <c>points-label</c> class
        /// </summary>
        [<Emit("$0[\"points-label\"]")>]
        abstract pointsLabel : string

        /// <summary>
        /// Binding for <c>result-window</c> class
        /// </summary>
        [<Emit("$0[\"result-window\"]")>]
        abstract resultWindow : string

    type Default =

        /// <summary>
        /// Binding for <c>points-score</c> class
        /// </summary>
        [<Emit("$0[\"points-score\"]")>]
        abstract pointsScore : string

        /// <summary>
        /// Binding for <c>points-label</c> class
        /// </summary>
        [<Emit("$0[\"points-label\"]")>]
        abstract pointsLabel : string

        /// <summary>
        /// Binding for <c>result-window</c> class
        /// </summary>
        [<Emit("$0[\"result-window\"]")>]
        abstract resultWindow : string

